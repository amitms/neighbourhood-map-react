{"version":3,"sources":["SideBar.js","App.js","registerServiceWorker.js","index.js"],"names":["SideBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","open","document","querySelector","style","display","search","event","query","target","value","trim","toLowerCase","setState","searchquery","length","markers","props","filter","p","name","includes","newmarkers","state","infoWindow","console","log","map","window","google","maps","Map","getElementById","center","lat","lng","zoom","mapTypeId","infowindow","InfoWindow","myVenue","contentString","concat","location","markerVenues","Marker","position","latitude","longitude","title","setAnimation","Animation","DROP","setContent","_this2","push","_this3","react_default","a","createElement","className","role","onClick","tabIndex","type","aria-labelledby","placeholder","onChange","marker","key","id","onKeyPress","Component","App","mapIsReady","require","venues","axios","get","URLSearchParams","client_id","client_secret","near","radius","v","then","response","data","groups","items","catch","error","alert","index","getElementsByTagName","script","src","async","defer","addEventListener","parentNode","insertBefore","home","markerHome","venue","address","addListener","src_SideBar","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","URL","process","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5aec1404.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass SideBar extends Component {\n    constructor() {\n        super();\n            this.state = { \n                markers: [],\n                searchquery: '',\n                newmarkers:[]\n                };\n            }\n\n    componentDidMount() {\n        this.setState({markers: this.props.markers});\n        this.setState({newmarkers: this.props.markers});\n        this.props.markers.map(value => \n            this.state.markers.push(value.name));\n//        console.log(this.state.markers);\n    }  \n\n    open = () => {\n        const SideBar = document.querySelector('.SideBar');\n        SideBar.style.display === 'none' ? SideBar.style.display = 'block' : SideBar.style.display = 'none';\n    }\n    \n    search = (event) => {\n        var query = event.target.value.trim().toLowerCase();\n        this.setState({searchquery: query});\n        if(query.length === 0)\n            this.setState({markers: this.props.markers});\n        else\n            this.setState({markers: this.props.markers.filter(p => \n                p.name.toLowerCase().includes(query))});\n            this.setState({newmarkers: this.state.markers});\n\n/*********************************************************/ \n    this.infoWindow();\n    }\n/*********** Rerender markers and Info Window ********************/   \n    infoWindow = () => {\n\n            console.log(this.state.newmarkers);\n\n        const home = {lat: 39.2029072, lng: -85.9235928};    \n        var map = new window.google.maps.Map(document.getElementById('map'), {\n            center: home,          \n            zoom: 17,\n            mapTypeId: 'roadmap'\n        });\n\n        var infowindow = new window.google.maps.InfoWindow();\n        this.state.newmarkers.map(myVenue => {\n            var contentString = `${myVenue.name}, ${myVenue.location}`\n            var markerVenues = new window.google.maps.Marker({\n              position: {lat: myVenue.latitude , lng: myVenue.longitude},\n              map: map,\n              title: myVenue.name \n            })\n            markerVenues.setAnimation(window.google.maps.Animation.DROP);\n            infowindow.setContent(contentString);\n            infowindow.open(map, markerVenues);\n\n\n            return true;\n        });  \n    }\n/*********************************************************/ \n    \n \n    render() {\n\n        return (\n            <div>\n                <aside><div className=\"title\" role=\"banner\">Neighbourhood Map (Columbus, IN)- React -Udacity</div></aside>\n\n                <div className=\"menuicon\" onClick={this.open} tabIndex = \"0\">\n                    <div className=\"menuiconline\"></div>\n                    <div className=\"menuiconline\"></div>\n                    <div className=\"menuiconline\"></div>\n                </div>\n                <div className=\"SideBar\" role=\"navigation\" >\n                    <div className=\"form\" role=\"form\" tabIndex = \"0\">\n                        <input type=\"text\"\n                           aria-labelledby=\"filter\" placeholder=\"Search\" tabIndex = \"0\"\n                           className=\"input\" role=\"search\"\n                           onChange={this.search}/>\n                    </div>\n                    <ul>\n                        {this.state.markers.map((marker) =>\n                            <li key={marker.id} onKeyPress = {this.infoWindow} \n                                                onClick = {this.infoWindow}                                \n                                                tabIndex = \"0\" role=\"button\">\n                                   {marker.name}\n                            </li>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SideBar;\n    ","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport SideBar from \"./SideBar.js\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mapIsReady: false,\r\n      markers: require(\"./venues.json\"), \r\n      venues:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n/*********** Foursquare API fetch for venues from axios ********************/    \r\n    const exploreQuery = \"https://api.foursquare.com/v2/venues/explore?\";\r\n    const parameters = {\r\n    client_id: \"1GQRBJDSOIGQZFBJKOWQIWX5OHUQHCQHXELYKW54MO5GHZHN\",\r\n    client_secret: \"ZY33445JA0GQOP4KMBW5SYGXKQKTMMAOVUPOVRKHDEWLNEPC\",\r\n    query: \"food\",\r\n    near: \"Columbus IN\",\r\n    radius: 200,   \r\n    v: \"20182507\"\r\n      };\r\n\r\n    axios.get(exploreQuery + new URLSearchParams(parameters))\r\n      .then(response => {\r\n//        console.log(response)\r\n        this.setState({\r\n        venues: response.data.response.groups[0].items\r\n        })\r\n      })\r\n      .catch(error => {\r\n//      console.log(\"ERROR!! \" + error)\r\n      alert(\"ERROR!! \" + error)\r\n      });    \r\n\r\n/*********** Google Map API ********************/    \r\n    const ApiKey = 'AIzaSyAD4vpwyw4zFgzo_4_RG4lAaVwCIVZM9Jc';  //use AIzaSyBrRQlBPiy6icvdiqbmIrj0DQ1RuI1FKEM or AIzaSyAD4vpwyw4zFgzo_4_RG4lAaVwCIVZM9Jc (full) \r\n    var index = window.document.getElementsByTagName(\"script\")[0];\r\n    var script = window.document.createElement(\"script\");\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${ApiKey}&v=3 callback=googleSuccess onerror=googleError()`;\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.addEventListener('load', () => {\r\n      this.setState({ mapIsReady: true });\r\n    });\r\n    index.parentNode.insertBefore(script, index);\r\n  }\r\n/*********************************************************/ \r\n  componentDidUpdate() {\r\n    const home = {lat: 39.2029072, lng: -85.9235928};\r\n\r\n    if (this.state.mapIsReady) {\r\n      var map = new window.google.maps.Map(document.getElementById('map'), {\r\n        center: home,          \r\n        zoom: 17,\r\n        mapTypeId: 'roadmap'\r\n      });\r\n    // eslint-disable-next-line\r\n      const markerHome = new window.google.maps.Marker({\r\n        position: home,\r\n        map: map,\r\n        title: 'home'\r\n      });\r\n/*********** Info Window for venues markers********************/   \r\n      var infowindow = new window.google.maps.InfoWindow();\r\n      infowindow.setContent('Home');\r\n      infowindow.open(map, markerHome);\r\n      this.state.venues.map(myVenue => {\r\n        var contentString = `${myVenue.venue.name}, ${myVenue.venue.location.address}`\r\n        var markerVenues = new window.google.maps.Marker({\r\n          position: {lat: myVenue.venue.location.lat , lng: myVenue.venue.location.lng},\r\n          map: map,\r\n          title: myVenue.venue.name \r\n        })\r\n        markerVenues.setAnimation(window.google.maps.Animation.DROP);\r\n\r\n        markerVenues.addListener('click', function() {\r\n          infowindow.setContent(contentString);\r\n          infowindow.open(map, markerVenues);\r\n\r\n        })\r\n        return true;\r\n      });   \r\n    }\r\n/*************************for debug purpose********************************/ \r\n//var venueslist = this.state.venues.map(value => value.venue);\r\n//console.log(venueslist);\r\n/*********************************************************/   \r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <SideBar \r\n            markers={this.state.markers}\r\n          />\r\n        </header>\r\n        <div id=\"map\"></div>\r\n\r\n      </div>    \r\n      )\r\n  }\r\n}\r\n\r\nexport default App;","// In production, service worker is used by register()\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n\n"],"sourceRoot":""}